
docker_registry_mirror: "{{ lookup('env', 'DOCKER_REGISTRY_MIRROR') | default('http://docker.mirrors.sjtug.sjtu.edu.cn', true) }}"

gcr_image_repo: "{{ lookup('env', 'GCR_IMAGE_REPO') | default('gcr.m.daocloud.io', true) }}"
kube_image_repo: "{{ lookup('env', 'KUBE_IMAGE_REPO') | default('k8s-gcr-io.mirrors.sjtug.sjtu.edu.cn', true) | regex_replace('/google_containers', '') }}"
docker_image_repo: "{{ docker_registry_mirror | default('docker.mirrors.sjtug.sjtu.edu.cn', true) | regex_replace('https://', '') | regex_replace('http://', '') }}"
quay_image_repo: "{{ lookup('env', 'QUAY_IMAGE_REPO') | default('quay.m.daocloud.io', true) }}"
github_image_repo: "{{ lookup('env', 'GITHUB_IMAGE_REPO') | default('ghcr.m.daocloud.io', true) }}"
files_repo: "https://files.m.daocloud.io"

# override: group_vars/all/docker.yml
docker_daemon_graph: "{{ lookup('env', 'DOCKER_DATA_ROOT') | default('/var/lib/docker', true) }}"
docker_registry_mirrors:
  - "{{ docker_registry_mirror }}"
  - "https://docker.mirrors.sjtug.sjtu.edu.cn"
  - "https://d50f1b73.mirror.aliyuncs.com"

docker_insecure_registries: >-
  {%- if lookup('env', 'DOCKER_INSECURE_REGISTRIES') | length > 0 -%}
  {{ [] + lookup('env', 'DOCKER_INSECURE_REGISTRIES').split(',') }}
  {%- else -%}
  {{ [] }}
  {%- endif -%}

# override: group_vars/all/containerd.yml
containerd_storage_dir: "{{ lookup('env', 'CONTAINERD_DATA_ROOT') | default('/var/lib/containerd', true) }}"
containerd_registries:
  "docker.io":
    - "{{ docker_registry_mirror }}"
    - "https://d50f1b73.mirror.aliyuncs.com"
containerd_insecure_registries: >-
  {%- if lookup('env', 'DOCKER_INSECURE_REGISTRIES') | length > 0 -%}
  {{ [] + lookup('env', 'DOCKER_INSECURE_REGISTRIES').split(',') }}
  {%- else -%}
  {{ [] }}
  {%- endif -%}

download_run_once: true

# kube_vip_address: 1.2.3.4
kube_vip_enabled: "{{ kube_vip_address is defined }}"
kube_vip_arp_enabled: "{{ kube_vip_enabled }}"
kube_vip_services_enabled: "{{ kube_vip_enabled }}"
kube_proxy_strict_arp: "{{ kube_vip_arp_enabled }}"
kube_vip_controlplane_enabled: "{{ kube_vip_enabled }}"

# override: group_vars/all/all.yml
loadbalancer_apiserver_localhost: "{{ not kube_vip_enabled }}"
loadbalancer_apiserver_type: nginx
#loadbalancer_apiserver:
#  address: "{{ kube_vip_enabled | ternary(kube_vip_address, '127.0.0.1') }}"
#  port: "{{ loadbalancer_apiserver_port }}"

# override: group_vars/k8s_cluster/addons.yml
helm_enabled: true
metrics_server_enabled: true
metrics_server_container_port: 4443
metrics_server_kubelet_insecure_tls: true
metrics_server_metric_resolution: 15s
metrics_server_kubelet_preferred_address_types: "InternalIP,ExternalIP,Hostname"
metrics_server_host_network: false
metrics_server_replicas: 1

ingress_nginx_enabled: true
ingress_nginx_nodeselector:
  kubernetes.io/os: "linux"
ingress_nginx_tolerations:
  - key: "node-role.kubernetes.io/master"
    operator: "Equal"
    value: ""
    effect: "NoSchedule"
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Equal"
    value: ""
    effect: "NoSchedule"
ingress_nginx_namespace: "ingress-nginx"
ingress_nginx_insecure_port: 80
ingress_nginx_secure_port: 443
ingress_nginx_extra_args:
  - --default-ssl-certificate=ingress-nginx/default-tls
ingress_nginx_configmap:
  hsts: "false"
  ssl-redirect: "false"
  use-forwarded-headers: "true"
  enable-underscores-in-headers: "true"
  client-header-buffer-size: "512k"
  large-client-header-buffers: "4 512k"

krew_enabled: true

# override: group_vars/k8s_cluster/k8s-cluster.yml
kube_network_plugin: "{{ lookup('env', 'KUBE_NETWORK_PLUGIN') | default('calico', true) }}"
kube_reserved: true
auto_renew_certificates: true
tls_cipher_suites:
  - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
  - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
  - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
  - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
  - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
  - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
  - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
  - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
  - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
  - TLS_RSA_WITH_AES_128_CBC_SHA
  - TLS_RSA_WITH_AES_128_GCM_SHA256
  - TLS_RSA_WITH_AES_256_CBC_SHA
  - TLS_RSA_WITH_AES_256_GCM_SHA384
etcd_tls_cipher_suites:
  - TLS_RSA_WITH_AES_128_CBC_SHA
  - TLS_RSA_WITH_AES_256_CBC_SHA
  - TLS_RSA_WITH_AES_128_GCM_SHA256
  - TLS_RSA_WITH_AES_256_GCM_SHA384
  - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
  - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
  - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
  - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
  - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
  - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
  - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
  - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
  - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
  - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
  - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256

kube_apiserver_node_port_range: "30000-42767"
#kube_feature_gates:
#  - RemoveSelfLink=false
kubelet_config_extra_args:
  imageGCHighThresholdPercent: 75
  imageGCLowThresholdPercent: 70
kube_kubeadm_scheduler_extra_args: {}
kube_kubeadm_controller_extra_args: {}

nvidia_accelerator_enabled: "{{ nvidia_gpu_nodes | length > 0 }}"
nvidia_gpu_flavor: "{{ lookup('env', 'NVIDIA_GPU_FLAVOR') | default('tesla', true) }}"
nvidia_driver_install_supported: "{{ lookup('env', 'NVIDIA_GPU_FLAVOR') in ['gtx', 'tesla'] }}"
nvidia_driver_install_centos_container: "{{ docker_image_repo }}/atzedevries/nvidia-centos-driver-installer:2"
nvidia_gpu_nodes: "{{ lookup('env', 'NVIDIA_GPU_NODES').split(',') | default([], true) }}"
